============================= test session starts ==============================
platform linux2 -- Python 2.7.12, pytest-3.8.1, py-1.6.0, pluggy-0.7.1 -- /home/kirsten/volttron/env/bin/python
cachedir: .pytest_cache
rootdir: /home/kirsten/volttron, inifile: pytest.ini
collecting ... collected 66 items / 46 deselected

test_rmq_pubsub.py::test_granularity[volttron_instance0] PASSED          [  5%]
test_rmq_pubsub.py::test_incorrect_topic[volttron_instance0] PASSED      [ 10%]
test_rmq_pubsub.py::test_unsubscribe[volttron_instance0] PASSED          [ 15%]
test_rmq_pubsub.py::test_irrelevant_unsubscribe[volttron_instance0] PASSED [ 20%]
test_rmq_pubsub.py::test_regex[volttron_instance0] FAILED                [ 25%]
test_rmq_pubsub.py::test_regex_incorrect_word_count[volttron_instance0] FAILED [ 30%]
test_rmq_pubsub.py::test_callback[volttron_instance0] FAILED             [ 35%]
test_rmq_pubsub.py::test_list[volttron_instance0] FAILED                 [ 40%]
test_rmq_pubsub.py::test_list_reverse[volttron_instance0] FAILED         [ 45%]
test_rmq_pubsub.py::test_persistence[volttron_instance0] FAILED          [ 50%]
test_rmq_pubsub.py::test_granularity[volttron_instance1] ERROR           [ 55%]
test_rmq_pubsub.py::test_incorrect_topic[volttron_instance1] ERROR       [ 60%]
test_rmq_pubsub.py::test_unsubscribe[volttron_instance1] ERROR           [ 65%]
test_rmq_pubsub.py::test_irrelevant_unsubscribe[volttron_instance1] ERROR [ 70%]
test_rmq_pubsub.py::test_regex[volttron_instance1] ERROR                 [ 75%]
test_rmq_pubsub.py::test_regex_incorrect_word_count[volttron_instance1] ERROR [ 80%]
test_rmq_pubsub.py::test_callback[volttron_instance1] ERROR              [ 85%]
test_rmq_pubsub.py::test_list[volttron_instance1] ERROR                  [ 90%]
test_rmq_pubsub.py::test_list_reverse[volttron_instance1] ERROR          [ 95%]
test_rmq_pubsub.py::test_persistence[volttron_instance1] ERROR           [100%]

==================================== ERRORS ====================================
____________ ERROR at setup of test_granularity[volttron_instance1] ____________

request = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>

    @pytest.fixture(scope="module",
                    params=[('zmq', False), ('rmq', True)])
    def volttron_instance(request):
        """Fixture that returns a single instance of volttron platform for testing
    
        @param request: pytest request object
        @return: volttron platform instance
        """
        print("building instance")
        wrapper = None
        address = get_rand_vip()
        wrapper = build_wrapper(address,
                                message_bus=request.param[0],
>                               ssl_auth=request.param[1])

address    = 'tcp://127.0.0.239:5190'
request    = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>
wrapper    = None

../fixtures/volttron_platform_fixtures.py:191: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../fixtures/volttron_platform_fixtures.py:55: in build_wrapper
    wrapper.startup_platform(vip_address=vip_address, **kwargs)
../utils/platformwrapper.py:432: in startup_platform
    ssl_auth=self.ssl_auth)
../fixtures/rmq_test_setup.py:59: in create_rmq_volttron_setup
    prompt=False)
../../volttron/utils/rmq_setup.py:544: in setup_rabbitmq_volttron
    _setup_for_ssl_auth(rmq_config)
../../volttron/utils/rmq_setup.py:341: in _setup_for_ssl_auth
    start_rabbit(rmq_config.rmq_home)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

rmq_home = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'

    def start_rabbit(rmq_home):
        """
        Start RabbitMQ server
        :param rmq_home: RabbitMQ installation path
        :return:
        """
    
        status_cmd = [os.path.join(rmq_home, "sbin/rabbitmqctl"), "status"]
        start_cmd = [os.path.join(rmq_home, "sbin/rabbitmq-server"), "-detached"]
        i = 5
        started = False
        start = True
        while not started:
            try:
                subprocess.check_call(status_cmd, stdout=subprocess.PIPE,
                                      stderr=subprocess.PIPE)
                if not start:
                    # if we have attempted started already
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                started = True
                _log.info("Rmq server at {} is running".format(rmq_home))
            except subprocess.CalledProcessError as e:
                if start:
                    # attempt to start once
                    subprocess.check_call(start_cmd)
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                    start = False
                else:
                    if i > 60:  # if more than a minute, may be something is wrong
>                       raise e
E                       CalledProcessError: Command '['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']' returned non-zero exit status 69

e          = CalledProcessError()
i          = 65
rmq_home   = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'
start      = False
start_cmd  = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmq-server', '-detached']
started    = False
status_cmd = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']

../../volttron/utils/rmq_setup.py:953: CalledProcessError
---------------------------- Captured stdout setup -----------------------------
Shutting down instance: /tmp/tmp_CzVn6
/tmp/tmp_CzVn6: Building generic agent.
/tmp/tmp_CzVn6: generating new public secret key pair
/tmp/tmp_CzVn6: Using vip-address tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: BUILD agent VOLTTRON HOME: /tmp/tmp_CzVn6
/tmp/tmp_CzVn6: platformwrapper.build_agent.address: tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: Adding publickey to auth.json
/tmp/tmp_CzVn6: platformwrapper.build_agent spawning
/tmp/tmp_CzVn6: Got hello response ['1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', '0d414a9e-369f-4ebc-bb99-1ff557eb1521']
PEER LIST: ['control', 'master.web', '0d414a9e-369f-4ebc-bb99-1ff557eb1521', 'listener', '40bc2290-a5bf-497f-be9b-6d91a4348a72', 'agent2', 'agent1', 'config.store', 'keydiscovery', 'platform.auth', 'pubsub']
/tmp/tmp_CzVn6: Building generic agent.
/tmp/tmp_CzVn6: generating new public secret key pair
/tmp/tmp_CzVn6: Using vip-address tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: BUILD agent VOLTTRON HOME: /tmp/tmp_CzVn6
/tmp/tmp_CzVn6: platformwrapper.build_agent.address: tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: Adding publickey to auth.json
/tmp/tmp_CzVn6: platformwrapper.build_agent spawning
/tmp/tmp_CzVn6: Got hello response ['1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'c337c461-8319-488f-81d1-f36e91b51c69']
PEER LIST: ['control', 'master.web', 'c337c461-8319-488f-81d1-f36e91b51c69', '40bc2290-a5bf-497f-be9b-6d91a4348a72', 'agent2', 'agent1', 'config.store', 'keydiscovery', 'platform.auth', 'pubsub']
/tmp/tmp_CzVn6: Removing /tmp/tmp_CzVn6
building instance
/tmp/tmpZQpu5v: Creating platform wrapper
BUILD_WRAPPER: tcp://127.0.0.239:5190
/tmp/tmpZQpu5v: Setting up volttron test environemnt /tmp/tmpZQpu5v
Create new exchange: volttron, {'durable': True, 'type': 'topic', 'arguments': {'alternate-exchange': 'undeliverable'}}
Create new exchange: undeliverable, {'durable': True, 'type': 'fanout'}
Created CA cert
---------------------------- Captured stderr setup -----------------------------
2018-10-23 13:41:08,940 volttron.platform.agent.utils DEBUG: missing file /tmp/tmp_CzVn6/agentdln06E.keys
2018-10-23 13:41:08,940 volttron.platform.agent.utils INFO: creating file /tmp/tmp_CzVn6/agentdln06E.keys
2018-10-23 13:41:08,944 root DEBUG: Creating ZMQ Core None
2018-10-23 13:41:08,944 volttron.platform.vip.agent.core DEBUG: address: tcp://127.0.0.165:5488
2018-10-23 13:41:08,944 volttron.platform.vip.agent.core DEBUG: identity: None
2018-10-23 13:41:08,944 volttron.platform.vip.agent.core DEBUG: agent_uuid: None
2018-10-23 13:41:08,945 volttron.platform.vip.agent.core DEBUG: serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
2018-10-23 13:41:08,945 volttron.platform.vip.agent.core DEBUG: AGENT RUNNING on ZMQ Core 0d414a9e-369f-4ebc-bb99-1ff557eb1521
2018-10-23 13:41:08,956 volttron.platform.vip.zmq_connection DEBUG: ZMQ connection 0d414a9e-369f-4ebc-bb99-1ff557eb1521
2018-10-23 13:41:08,988 volttron.platform.vip.agent.core INFO: Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: 0d414a9e-369f-4ebc-bb99-1ff557eb1521
2018-10-23 13:41:08,988 volttron.platform.vip.agent.core DEBUG: Running onstart methods.
2018-10-23 13:41:09,007 volttron.platform.vip.agent.subsystems.configstore DEBUG: Processing callbacks for affected files: {}
2018-10-23 13:41:09,491 volttron.platform.vip.agent.subsystems.hello INFO: 0d414a9e-369f-4ebc-bb99-1ff557eb1521 Requesting hello from peer ()
2018-10-23 13:41:09,493 volttron.platform.vip.agent.subsystems.hello INFO: Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', '0d414a9e-369f-4ebc-bb99-1ff557eb1521'], 'user': '2a7082b6-cf02-4fb5-a408-db8c1d1728bf', 'id': '15189815129365742674.8791693449793'})
2018-10-23 13:41:09,548 volttron.platform.agent.utils DEBUG: missing file /tmp/tmp_CzVn6/agentFZjVR1.keys
2018-10-23 13:41:09,548 volttron.platform.agent.utils INFO: creating file /tmp/tmp_CzVn6/agentFZjVR1.keys
2018-10-23 13:41:09,551 root DEBUG: Creating ZMQ Core None
2018-10-23 13:41:09,552 volttron.platform.vip.agent.core DEBUG: address: tcp://127.0.0.165:5488
2018-10-23 13:41:09,552 volttron.platform.vip.agent.core DEBUG: identity: None
2018-10-23 13:41:09,552 volttron.platform.vip.agent.core DEBUG: agent_uuid: None
2018-10-23 13:41:09,552 volttron.platform.vip.agent.core DEBUG: serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
2018-10-23 13:41:09,552 volttron.platform.vip.agent.core DEBUG: AGENT RUNNING on ZMQ Core c337c461-8319-488f-81d1-f36e91b51c69
2018-10-23 13:41:09,575 volttron.platform.vip.zmq_connection DEBUG: ZMQ connection c337c461-8319-488f-81d1-f36e91b51c69
2018-10-23 13:41:09,628 volttron.platform.vip.agent.core INFO: Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: c337c461-8319-488f-81d1-f36e91b51c69
2018-10-23 13:41:09,628 volttron.platform.vip.agent.core DEBUG: Running onstart methods.
2018-10-23 13:41:09,634 volttron.platform.vip.agent.subsystems.configstore DEBUG: Processing callbacks for affected files: {}
2018-10-23 13:41:10,133 volttron.platform.vip.agent.subsystems.hello INFO: c337c461-8319-488f-81d1-f36e91b51c69 Requesting hello from peer ()
2018-10-23 13:41:10,138 volttron.platform.vip.agent.subsystems.hello INFO: Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'c337c461-8319-488f-81d1-f36e91b51c69'], 'user': '81bd0bd5-d72b-434e-afca-aa2bfeb868fe', 'id': '17243311137454109625.8791693491117'})
2018-10-23 13:41:11,044 volttron.platform.agent.utils DEBUG: missing file /tmp/tmpZQpu5v/keystore
2018-10-23 13:41:11,044 volttron.platform.agent.utils INFO: creating file /tmp/tmpZQpu5v/keystore
Warning: PID file not written; -detached was passed.
2018-10-23 13:41:15,814 volttron.platform.vip.agent.core ERROR: No response to hello message after 10 seconds.
2018-10-23 13:41:15,815 volttron.platform.vip.agent.core ERROR: A common reason for this is a conflicting VIP IDENTITY.
2018-10-23 13:41:15,815 volttron.platform.vip.agent.core ERROR: Another common reason is not having an auth entry onthe target instance.
2018-10-23 13:41:15,815 volttron.platform.vip.agent.core ERROR: Shutting down agent.
2018-10-23 13:41:15,815 volttron.platform.vip.agent.core ERROR: Possible conflicting identity is: agent2
2018-10-23 13:42:05,968 volttron.utils.rmq_mgmt DEBUG: Creating new VIRTUAL HOST: volttron_test
2018-10-23 13:42:05,992 volttron.utils.rmq_mgmt DEBUG: Create READ, WRITE and CONFIGURE permissions for the user: volttron_test-admin
Warning: PID file not written; -detached was passed.
------------------------------ Captured log setup ------------------------------
utils.py                   650 DEBUG    missing file /tmp/tmp_CzVn6/agentdln06E.keys
utils.py                   651 INFO     creating file /tmp/tmp_CzVn6/agentdln06E.keys
__init__.py                112 DEBUG    Creating ZMQ Core None
core.py                    459 DEBUG    address: tcp://127.0.0.165:5488
core.py                    460 DEBUG    identity: None
core.py                    461 DEBUG    agent_uuid: None
core.py                    462 DEBUG    serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
core.py                    551 DEBUG    AGENT RUNNING on ZMQ Core 0d414a9e-369f-4ebc-bb99-1ff557eb1521
zmq_connection.py           77 DEBUG    ZMQ connection 0d414a9e-369f-4ebc-bb99-1ff557eb1521
core.py                    519 INFO     Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: 0d414a9e-369f-4ebc-bb99-1ff557eb1521
core.py                    520 DEBUG    Running onstart methods.
configstore.py             270 DEBUG    Processing callbacks for affected files: {}
hello.py                    86 INFO     0d414a9e-369f-4ebc-bb99-1ff557eb1521 Requesting hello from peer ()
hello.py                   104 INFO     Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', '0d414a9e-369f-4ebc-bb99-1ff557eb1521'], 'user': '2a7082b6-cf02-4fb5-a408-db8c1d1728bf', 'id': '15189815129365742674.8791693449793'})
utils.py                   650 DEBUG    missing file /tmp/tmp_CzVn6/agentFZjVR1.keys
utils.py                   651 INFO     creating file /tmp/tmp_CzVn6/agentFZjVR1.keys
__init__.py                112 DEBUG    Creating ZMQ Core None
core.py                    459 DEBUG    address: tcp://127.0.0.165:5488
core.py                    460 DEBUG    identity: None
core.py                    461 DEBUG    agent_uuid: None
core.py                    462 DEBUG    serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
core.py                    551 DEBUG    AGENT RUNNING on ZMQ Core c337c461-8319-488f-81d1-f36e91b51c69
zmq_connection.py           77 DEBUG    ZMQ connection c337c461-8319-488f-81d1-f36e91b51c69
core.py                    519 INFO     Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: c337c461-8319-488f-81d1-f36e91b51c69
core.py                    520 DEBUG    Running onstart methods.
configstore.py             270 DEBUG    Processing callbacks for affected files: {}
hello.py                    86 INFO     c337c461-8319-488f-81d1-f36e91b51c69 Requesting hello from peer ()
hello.py                   104 INFO     Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'c337c461-8319-488f-81d1-f36e91b51c69'], 'user': '81bd0bd5-d72b-434e-afca-aa2bfeb868fe', 'id': '17243311137454109625.8791693491117'})
utils.py                   650 DEBUG    missing file /tmp/tmpZQpu5v/keystore
utils.py                   651 INFO     creating file /tmp/tmpZQpu5v/keystore
core.py                    494 ERROR    No response to hello message after 10 seconds.
core.py                    495 ERROR    A common reason for this is a conflicting VIP IDENTITY.
core.py                    496 ERROR    Another common reason is not having an auth entry onthe target instance.
core.py                    498 ERROR    Shutting down agent.
core.py                    500 ERROR    Possible conflicting identity is: agent2
rmq_mgmt.py                175 DEBUG    Creating new VIRTUAL HOST: volttron_test
rmq_mgmt.py                345 DEBUG    Create READ, WRITE and CONFIGURE permissions for the user: volttron_test-admin
__________ ERROR at setup of test_incorrect_topic[volttron_instance1] __________

request = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>

    @pytest.fixture(scope="module",
                    params=[('zmq', False), ('rmq', True)])
    def volttron_instance(request):
        """Fixture that returns a single instance of volttron platform for testing
    
        @param request: pytest request object
        @return: volttron platform instance
        """
        print("building instance")
        wrapper = None
        address = get_rand_vip()
        wrapper = build_wrapper(address,
                                message_bus=request.param[0],
>                               ssl_auth=request.param[1])

address    = 'tcp://127.0.0.239:5190'
request    = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>
wrapper    = None

../fixtures/volttron_platform_fixtures.py:191: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../fixtures/volttron_platform_fixtures.py:55: in build_wrapper
    wrapper.startup_platform(vip_address=vip_address, **kwargs)
../utils/platformwrapper.py:432: in startup_platform
    ssl_auth=self.ssl_auth)
../fixtures/rmq_test_setup.py:59: in create_rmq_volttron_setup
    prompt=False)
../../volttron/utils/rmq_setup.py:544: in setup_rabbitmq_volttron
    _setup_for_ssl_auth(rmq_config)
../../volttron/utils/rmq_setup.py:341: in _setup_for_ssl_auth
    start_rabbit(rmq_config.rmq_home)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

rmq_home = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'

    def start_rabbit(rmq_home):
        """
        Start RabbitMQ server
        :param rmq_home: RabbitMQ installation path
        :return:
        """
    
        status_cmd = [os.path.join(rmq_home, "sbin/rabbitmqctl"), "status"]
        start_cmd = [os.path.join(rmq_home, "sbin/rabbitmq-server"), "-detached"]
        i = 5
        started = False
        start = True
        while not started:
            try:
                subprocess.check_call(status_cmd, stdout=subprocess.PIPE,
                                      stderr=subprocess.PIPE)
                if not start:
                    # if we have attempted started already
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                started = True
                _log.info("Rmq server at {} is running".format(rmq_home))
            except subprocess.CalledProcessError as e:
                if start:
                    # attempt to start once
                    subprocess.check_call(start_cmd)
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                    start = False
                else:
                    if i > 60:  # if more than a minute, may be something is wrong
>                       raise e
E                       CalledProcessError: Command '['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']' returned non-zero exit status 69

e          = CalledProcessError()
i          = 65
rmq_home   = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'
start      = False
start_cmd  = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmq-server', '-detached']
started    = False
status_cmd = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']

../../volttron/utils/rmq_setup.py:953: CalledProcessError
____________ ERROR at setup of test_unsubscribe[volttron_instance1] ____________

request = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>

    @pytest.fixture(scope="module",
                    params=[('zmq', False), ('rmq', True)])
    def volttron_instance(request):
        """Fixture that returns a single instance of volttron platform for testing
    
        @param request: pytest request object
        @return: volttron platform instance
        """
        print("building instance")
        wrapper = None
        address = get_rand_vip()
        wrapper = build_wrapper(address,
                                message_bus=request.param[0],
>                               ssl_auth=request.param[1])

address    = 'tcp://127.0.0.239:5190'
request    = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>
wrapper    = None

../fixtures/volttron_platform_fixtures.py:191: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../fixtures/volttron_platform_fixtures.py:55: in build_wrapper
    wrapper.startup_platform(vip_address=vip_address, **kwargs)
../utils/platformwrapper.py:432: in startup_platform
    ssl_auth=self.ssl_auth)
../fixtures/rmq_test_setup.py:59: in create_rmq_volttron_setup
    prompt=False)
../../volttron/utils/rmq_setup.py:544: in setup_rabbitmq_volttron
    _setup_for_ssl_auth(rmq_config)
../../volttron/utils/rmq_setup.py:341: in _setup_for_ssl_auth
    start_rabbit(rmq_config.rmq_home)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

rmq_home = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'

    def start_rabbit(rmq_home):
        """
        Start RabbitMQ server
        :param rmq_home: RabbitMQ installation path
        :return:
        """
    
        status_cmd = [os.path.join(rmq_home, "sbin/rabbitmqctl"), "status"]
        start_cmd = [os.path.join(rmq_home, "sbin/rabbitmq-server"), "-detached"]
        i = 5
        started = False
        start = True
        while not started:
            try:
                subprocess.check_call(status_cmd, stdout=subprocess.PIPE,
                                      stderr=subprocess.PIPE)
                if not start:
                    # if we have attempted started already
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                started = True
                _log.info("Rmq server at {} is running".format(rmq_home))
            except subprocess.CalledProcessError as e:
                if start:
                    # attempt to start once
                    subprocess.check_call(start_cmd)
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                    start = False
                else:
                    if i > 60:  # if more than a minute, may be something is wrong
>                       raise e
E                       CalledProcessError: Command '['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']' returned non-zero exit status 69

e          = CalledProcessError()
i          = 65
rmq_home   = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'
start      = False
start_cmd  = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmq-server', '-detached']
started    = False
status_cmd = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']

../../volttron/utils/rmq_setup.py:953: CalledProcessError
______ ERROR at setup of test_irrelevant_unsubscribe[volttron_instance1] _______

request = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>

    @pytest.fixture(scope="module",
                    params=[('zmq', False), ('rmq', True)])
    def volttron_instance(request):
        """Fixture that returns a single instance of volttron platform for testing
    
        @param request: pytest request object
        @return: volttron platform instance
        """
        print("building instance")
        wrapper = None
        address = get_rand_vip()
        wrapper = build_wrapper(address,
                                message_bus=request.param[0],
>                               ssl_auth=request.param[1])

address    = 'tcp://127.0.0.239:5190'
request    = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>
wrapper    = None

../fixtures/volttron_platform_fixtures.py:191: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../fixtures/volttron_platform_fixtures.py:55: in build_wrapper
    wrapper.startup_platform(vip_address=vip_address, **kwargs)
../utils/platformwrapper.py:432: in startup_platform
    ssl_auth=self.ssl_auth)
../fixtures/rmq_test_setup.py:59: in create_rmq_volttron_setup
    prompt=False)
../../volttron/utils/rmq_setup.py:544: in setup_rabbitmq_volttron
    _setup_for_ssl_auth(rmq_config)
../../volttron/utils/rmq_setup.py:341: in _setup_for_ssl_auth
    start_rabbit(rmq_config.rmq_home)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

rmq_home = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'

    def start_rabbit(rmq_home):
        """
        Start RabbitMQ server
        :param rmq_home: RabbitMQ installation path
        :return:
        """
    
        status_cmd = [os.path.join(rmq_home, "sbin/rabbitmqctl"), "status"]
        start_cmd = [os.path.join(rmq_home, "sbin/rabbitmq-server"), "-detached"]
        i = 5
        started = False
        start = True
        while not started:
            try:
                subprocess.check_call(status_cmd, stdout=subprocess.PIPE,
                                      stderr=subprocess.PIPE)
                if not start:
                    # if we have attempted started already
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                started = True
                _log.info("Rmq server at {} is running".format(rmq_home))
            except subprocess.CalledProcessError as e:
                if start:
                    # attempt to start once
                    subprocess.check_call(start_cmd)
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                    start = False
                else:
                    if i > 60:  # if more than a minute, may be something is wrong
>                       raise e
E                       CalledProcessError: Command '['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']' returned non-zero exit status 69

e          = CalledProcessError()
i          = 65
rmq_home   = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'
start      = False
start_cmd  = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmq-server', '-detached']
started    = False
status_cmd = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']

../../volttron/utils/rmq_setup.py:953: CalledProcessError
_______________ ERROR at setup of test_regex[volttron_instance1] _______________

request = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>

    @pytest.fixture(scope="module",
                    params=[('zmq', False), ('rmq', True)])
    def volttron_instance(request):
        """Fixture that returns a single instance of volttron platform for testing
    
        @param request: pytest request object
        @return: volttron platform instance
        """
        print("building instance")
        wrapper = None
        address = get_rand_vip()
        wrapper = build_wrapper(address,
                                message_bus=request.param[0],
>                               ssl_auth=request.param[1])

address    = 'tcp://127.0.0.239:5190'
request    = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>
wrapper    = None

../fixtures/volttron_platform_fixtures.py:191: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../fixtures/volttron_platform_fixtures.py:55: in build_wrapper
    wrapper.startup_platform(vip_address=vip_address, **kwargs)
../utils/platformwrapper.py:432: in startup_platform
    ssl_auth=self.ssl_auth)
../fixtures/rmq_test_setup.py:59: in create_rmq_volttron_setup
    prompt=False)
../../volttron/utils/rmq_setup.py:544: in setup_rabbitmq_volttron
    _setup_for_ssl_auth(rmq_config)
../../volttron/utils/rmq_setup.py:341: in _setup_for_ssl_auth
    start_rabbit(rmq_config.rmq_home)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

rmq_home = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'

    def start_rabbit(rmq_home):
        """
        Start RabbitMQ server
        :param rmq_home: RabbitMQ installation path
        :return:
        """
    
        status_cmd = [os.path.join(rmq_home, "sbin/rabbitmqctl"), "status"]
        start_cmd = [os.path.join(rmq_home, "sbin/rabbitmq-server"), "-detached"]
        i = 5
        started = False
        start = True
        while not started:
            try:
                subprocess.check_call(status_cmd, stdout=subprocess.PIPE,
                                      stderr=subprocess.PIPE)
                if not start:
                    # if we have attempted started already
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                started = True
                _log.info("Rmq server at {} is running".format(rmq_home))
            except subprocess.CalledProcessError as e:
                if start:
                    # attempt to start once
                    subprocess.check_call(start_cmd)
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                    start = False
                else:
                    if i > 60:  # if more than a minute, may be something is wrong
>                       raise e
E                       CalledProcessError: Command '['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']' returned non-zero exit status 69

e          = CalledProcessError()
i          = 65
rmq_home   = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'
start      = False
start_cmd  = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmq-server', '-detached']
started    = False
status_cmd = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']

../../volttron/utils/rmq_setup.py:953: CalledProcessError
____ ERROR at setup of test_regex_incorrect_word_count[volttron_instance1] _____

request = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>

    @pytest.fixture(scope="module",
                    params=[('zmq', False), ('rmq', True)])
    def volttron_instance(request):
        """Fixture that returns a single instance of volttron platform for testing
    
        @param request: pytest request object
        @return: volttron platform instance
        """
        print("building instance")
        wrapper = None
        address = get_rand_vip()
        wrapper = build_wrapper(address,
                                message_bus=request.param[0],
>                               ssl_auth=request.param[1])

address    = 'tcp://127.0.0.239:5190'
request    = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>
wrapper    = None

../fixtures/volttron_platform_fixtures.py:191: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../fixtures/volttron_platform_fixtures.py:55: in build_wrapper
    wrapper.startup_platform(vip_address=vip_address, **kwargs)
../utils/platformwrapper.py:432: in startup_platform
    ssl_auth=self.ssl_auth)
../fixtures/rmq_test_setup.py:59: in create_rmq_volttron_setup
    prompt=False)
../../volttron/utils/rmq_setup.py:544: in setup_rabbitmq_volttron
    _setup_for_ssl_auth(rmq_config)
../../volttron/utils/rmq_setup.py:341: in _setup_for_ssl_auth
    start_rabbit(rmq_config.rmq_home)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

rmq_home = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'

    def start_rabbit(rmq_home):
        """
        Start RabbitMQ server
        :param rmq_home: RabbitMQ installation path
        :return:
        """
    
        status_cmd = [os.path.join(rmq_home, "sbin/rabbitmqctl"), "status"]
        start_cmd = [os.path.join(rmq_home, "sbin/rabbitmq-server"), "-detached"]
        i = 5
        started = False
        start = True
        while not started:
            try:
                subprocess.check_call(status_cmd, stdout=subprocess.PIPE,
                                      stderr=subprocess.PIPE)
                if not start:
                    # if we have attempted started already
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                started = True
                _log.info("Rmq server at {} is running".format(rmq_home))
            except subprocess.CalledProcessError as e:
                if start:
                    # attempt to start once
                    subprocess.check_call(start_cmd)
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                    start = False
                else:
                    if i > 60:  # if more than a minute, may be something is wrong
>                       raise e
E                       CalledProcessError: Command '['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']' returned non-zero exit status 69

e          = CalledProcessError()
i          = 65
rmq_home   = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'
start      = False
start_cmd  = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmq-server', '-detached']
started    = False
status_cmd = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']

../../volttron/utils/rmq_setup.py:953: CalledProcessError
_____________ ERROR at setup of test_callback[volttron_instance1] ______________

request = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>

    @pytest.fixture(scope="module",
                    params=[('zmq', False), ('rmq', True)])
    def volttron_instance(request):
        """Fixture that returns a single instance of volttron platform for testing
    
        @param request: pytest request object
        @return: volttron platform instance
        """
        print("building instance")
        wrapper = None
        address = get_rand_vip()
        wrapper = build_wrapper(address,
                                message_bus=request.param[0],
>                               ssl_auth=request.param[1])

address    = 'tcp://127.0.0.239:5190'
request    = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>
wrapper    = None

../fixtures/volttron_platform_fixtures.py:191: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../fixtures/volttron_platform_fixtures.py:55: in build_wrapper
    wrapper.startup_platform(vip_address=vip_address, **kwargs)
../utils/platformwrapper.py:432: in startup_platform
    ssl_auth=self.ssl_auth)
../fixtures/rmq_test_setup.py:59: in create_rmq_volttron_setup
    prompt=False)
../../volttron/utils/rmq_setup.py:544: in setup_rabbitmq_volttron
    _setup_for_ssl_auth(rmq_config)
../../volttron/utils/rmq_setup.py:341: in _setup_for_ssl_auth
    start_rabbit(rmq_config.rmq_home)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

rmq_home = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'

    def start_rabbit(rmq_home):
        """
        Start RabbitMQ server
        :param rmq_home: RabbitMQ installation path
        :return:
        """
    
        status_cmd = [os.path.join(rmq_home, "sbin/rabbitmqctl"), "status"]
        start_cmd = [os.path.join(rmq_home, "sbin/rabbitmq-server"), "-detached"]
        i = 5
        started = False
        start = True
        while not started:
            try:
                subprocess.check_call(status_cmd, stdout=subprocess.PIPE,
                                      stderr=subprocess.PIPE)
                if not start:
                    # if we have attempted started already
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                started = True
                _log.info("Rmq server at {} is running".format(rmq_home))
            except subprocess.CalledProcessError as e:
                if start:
                    # attempt to start once
                    subprocess.check_call(start_cmd)
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                    start = False
                else:
                    if i > 60:  # if more than a minute, may be something is wrong
>                       raise e
E                       CalledProcessError: Command '['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']' returned non-zero exit status 69

e          = CalledProcessError()
i          = 65
rmq_home   = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'
start      = False
start_cmd  = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmq-server', '-detached']
started    = False
status_cmd = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']

../../volttron/utils/rmq_setup.py:953: CalledProcessError
_______________ ERROR at setup of test_list[volttron_instance1] ________________

request = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>

    @pytest.fixture(scope="module",
                    params=[('zmq', False), ('rmq', True)])
    def volttron_instance(request):
        """Fixture that returns a single instance of volttron platform for testing
    
        @param request: pytest request object
        @return: volttron platform instance
        """
        print("building instance")
        wrapper = None
        address = get_rand_vip()
        wrapper = build_wrapper(address,
                                message_bus=request.param[0],
>                               ssl_auth=request.param[1])

address    = 'tcp://127.0.0.239:5190'
request    = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>
wrapper    = None

../fixtures/volttron_platform_fixtures.py:191: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../fixtures/volttron_platform_fixtures.py:55: in build_wrapper
    wrapper.startup_platform(vip_address=vip_address, **kwargs)
../utils/platformwrapper.py:432: in startup_platform
    ssl_auth=self.ssl_auth)
../fixtures/rmq_test_setup.py:59: in create_rmq_volttron_setup
    prompt=False)
../../volttron/utils/rmq_setup.py:544: in setup_rabbitmq_volttron
    _setup_for_ssl_auth(rmq_config)
../../volttron/utils/rmq_setup.py:341: in _setup_for_ssl_auth
    start_rabbit(rmq_config.rmq_home)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

rmq_home = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'

    def start_rabbit(rmq_home):
        """
        Start RabbitMQ server
        :param rmq_home: RabbitMQ installation path
        :return:
        """
    
        status_cmd = [os.path.join(rmq_home, "sbin/rabbitmqctl"), "status"]
        start_cmd = [os.path.join(rmq_home, "sbin/rabbitmq-server"), "-detached"]
        i = 5
        started = False
        start = True
        while not started:
            try:
                subprocess.check_call(status_cmd, stdout=subprocess.PIPE,
                                      stderr=subprocess.PIPE)
                if not start:
                    # if we have attempted started already
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                started = True
                _log.info("Rmq server at {} is running".format(rmq_home))
            except subprocess.CalledProcessError as e:
                if start:
                    # attempt to start once
                    subprocess.check_call(start_cmd)
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                    start = False
                else:
                    if i > 60:  # if more than a minute, may be something is wrong
>                       raise e
E                       CalledProcessError: Command '['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']' returned non-zero exit status 69

e          = CalledProcessError()
i          = 65
rmq_home   = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'
start      = False
start_cmd  = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmq-server', '-detached']
started    = False
status_cmd = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']

../../volttron/utils/rmq_setup.py:953: CalledProcessError
___________ ERROR at setup of test_list_reverse[volttron_instance1] ____________

request = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>

    @pytest.fixture(scope="module",
                    params=[('zmq', False), ('rmq', True)])
    def volttron_instance(request):
        """Fixture that returns a single instance of volttron platform for testing
    
        @param request: pytest request object
        @return: volttron platform instance
        """
        print("building instance")
        wrapper = None
        address = get_rand_vip()
        wrapper = build_wrapper(address,
                                message_bus=request.param[0],
>                               ssl_auth=request.param[1])

address    = 'tcp://127.0.0.239:5190'
request    = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>
wrapper    = None

../fixtures/volttron_platform_fixtures.py:191: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../fixtures/volttron_platform_fixtures.py:55: in build_wrapper
    wrapper.startup_platform(vip_address=vip_address, **kwargs)
../utils/platformwrapper.py:432: in startup_platform
    ssl_auth=self.ssl_auth)
../fixtures/rmq_test_setup.py:59: in create_rmq_volttron_setup
    prompt=False)
../../volttron/utils/rmq_setup.py:544: in setup_rabbitmq_volttron
    _setup_for_ssl_auth(rmq_config)
../../volttron/utils/rmq_setup.py:341: in _setup_for_ssl_auth
    start_rabbit(rmq_config.rmq_home)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

rmq_home = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'

    def start_rabbit(rmq_home):
        """
        Start RabbitMQ server
        :param rmq_home: RabbitMQ installation path
        :return:
        """
    
        status_cmd = [os.path.join(rmq_home, "sbin/rabbitmqctl"), "status"]
        start_cmd = [os.path.join(rmq_home, "sbin/rabbitmq-server"), "-detached"]
        i = 5
        started = False
        start = True
        while not started:
            try:
                subprocess.check_call(status_cmd, stdout=subprocess.PIPE,
                                      stderr=subprocess.PIPE)
                if not start:
                    # if we have attempted started already
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                started = True
                _log.info("Rmq server at {} is running".format(rmq_home))
            except subprocess.CalledProcessError as e:
                if start:
                    # attempt to start once
                    subprocess.check_call(start_cmd)
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                    start = False
                else:
                    if i > 60:  # if more than a minute, may be something is wrong
>                       raise e
E                       CalledProcessError: Command '['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']' returned non-zero exit status 69

e          = CalledProcessError()
i          = 65
rmq_home   = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'
start      = False
start_cmd  = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmq-server', '-detached']
started    = False
status_cmd = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']

../../volttron/utils/rmq_setup.py:953: CalledProcessError
____________ ERROR at setup of test_persistence[volttron_instance1] ____________

request = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>

    @pytest.fixture(scope="module",
                    params=[('zmq', False), ('rmq', True)])
    def volttron_instance(request):
        """Fixture that returns a single instance of volttron platform for testing
    
        @param request: pytest request object
        @return: volttron platform instance
        """
        print("building instance")
        wrapper = None
        address = get_rand_vip()
        wrapper = build_wrapper(address,
                                message_bus=request.param[0],
>                               ssl_auth=request.param[1])

address    = 'tcp://127.0.0.239:5190'
request    = <SubRequest 'volttron_instance' for <Function 'test_granularity[volttron_instance1]'>>
wrapper    = None

../fixtures/volttron_platform_fixtures.py:191: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../fixtures/volttron_platform_fixtures.py:55: in build_wrapper
    wrapper.startup_platform(vip_address=vip_address, **kwargs)
../utils/platformwrapper.py:432: in startup_platform
    ssl_auth=self.ssl_auth)
../fixtures/rmq_test_setup.py:59: in create_rmq_volttron_setup
    prompt=False)
../../volttron/utils/rmq_setup.py:544: in setup_rabbitmq_volttron
    _setup_for_ssl_auth(rmq_config)
../../volttron/utils/rmq_setup.py:341: in _setup_for_ssl_auth
    start_rabbit(rmq_config.rmq_home)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

rmq_home = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'

    def start_rabbit(rmq_home):
        """
        Start RabbitMQ server
        :param rmq_home: RabbitMQ installation path
        :return:
        """
    
        status_cmd = [os.path.join(rmq_home, "sbin/rabbitmqctl"), "status"]
        start_cmd = [os.path.join(rmq_home, "sbin/rabbitmq-server"), "-detached"]
        i = 5
        started = False
        start = True
        while not started:
            try:
                subprocess.check_call(status_cmd, stdout=subprocess.PIPE,
                                      stderr=subprocess.PIPE)
                if not start:
                    # if we have attempted started already
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                started = True
                _log.info("Rmq server at {} is running".format(rmq_home))
            except subprocess.CalledProcessError as e:
                if start:
                    # attempt to start once
                    subprocess.check_call(start_cmd)
                    gevent.sleep(25)  # give a few seconds for all plugins to start
                    start = False
                else:
                    if i > 60:  # if more than a minute, may be something is wrong
>                       raise e
E                       CalledProcessError: Command '['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']' returned non-zero exit status 69

e          = CalledProcessError()
i          = 65
rmq_home   = '/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7'
start      = False
start_cmd  = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmq-server', '-detached']
started    = False
status_cmd = ['/home/kirsten/rabbitmq_server/rabbitmq_server-3.7.7/sbin/rabbitmqctl', 'status']

../../volttron/utils/rmq_setup.py:953: CalledProcessError
=================================== FAILURES ===================================
________________________ test_regex[volttron_instance0] ________________________

volttron_instance = volttron_home: /tmp/tmp_CzVn6
request = <FixtureRequest for <Function 'test_regex[volttron_instance0]'>>

    @pytest.mark.rmq_pubsub
    def test_regex(volttron_instance, request):
        global message_count1, message_count2, message_count3, message_count4, message_count5
        message_count1 = 0
        message_count2 = 0
        message_count3 = 0
        message_count4 = 0
        message_count5 = 0
    
        ### Test fails. Cause currently unknown ####
    
        test_topic1 = "test.topic.one.test1"
    
        # Tests to confirm messages get discarded due to lack of match
        test_topic2 = "testtopic1.foo.bar.three"
    
        # Tests whether * does exactly one word match multiple places
        test_topic3 = "test.one.topic"
    
        # Tests whether # can do multiple word matches
        test_topic4 = "testtopic2.one.two.test"
    
        # Tests whether * does exactly one word match that using both * and # delimiters works
        test_topic5 = "testtopic3.test.foo."
    
        prefix_astrix_ends = "*.one.*"
        prefix_astrix_middle = "testtopic1.*.test"
        prefix_hashtag_ends = "#.one.#"
        prefix_hashtag_middle = "testtopic2.#.test"
        prefix_both_delimiters_ends = "*.test.foo.#"
    
        def onmessage1(peer, sender, bus, topic, headers, message):
            global message_count1
            if topic.startswith(prefix_astrix_ends):
                message_count1 += 1
    
        def onmessage2(peer, sender, bus, topic, headers, message):
            global message_count2
            if topic.startswith(prefix_astrix_middle):
                message_count2 += 1
    
        def onmessage3(peer, sender, bus, topic, headers, message):
            global message_count3
            if topic.startswith(prefix_hashtag_ends):
                message_count3 += 1
    
        def onmessage4(peer, sender, bus, topic, headers, message):
            global message_count4
            if topic.startswith(prefix_hashtag_middle):
                message_count4 += 1
    
        def onmessage5(peer, sender, bus, topic, headers, message):
            global message_count5
            if topic.startswith(prefix_both_delimiters_ends):
                message_count5 += 1
    
        new_agent1 = volttron_instance.build_agent(identity='agent1')
        new_agent2 = volttron_instance.build_agent(identity='agent2')
    
        def stop():
            new_agent1.core.stop()
            new_agent2.core.stop()
    
        request.addfinalizer(stop)
    
        new_agent1.vip.pubsub.subscribe(peer='pubsub', prefix=test_topic1, callback=onmessage1)
        new_agent1.vip.pubsub.subscribe(peer='pubsub', prefix=test_topic2, callback=onmessage2)
        new_agent1.vip.pubsub.subscribe(peer='pubsub', prefix=test_topic3, callback=onmessage3)
        new_agent1.vip.pubsub.subscribe(peer='pubsub', prefix=test_topic4, callback=onmessage4)
        new_agent1.vip.pubsub.subscribe(peer='pubsub', prefix=test_topic5, callback=onmessage5)
        gevent.sleep(0.01)
    
        new_agent2.vip.pubsub.publish(peer="pubsub", topic=test_topic1, headers=None, message="Test message")
        new_agent2.vip.pubsub.publish(peer="pubsub", topic=test_topic2, headers=None, message="Test message")
        new_agent2.vip.pubsub.publish(peer="pubsub", topic=test_topic3, headers=None, message="Test message")
        new_agent2.vip.pubsub.publish(peer="pubsub", topic=test_topic4, headers=None, message="Test message")
        new_agent2.vip.pubsub.publish(peer="pubsub", topic=test_topic5, headers=None, message="Test message")
    
>       assert message_count1 == 1
E       assert 0 == 1

new_agent1 = <volttron.platform.vip.agent.Agent object at 0x7fef9c549b50>
new_agent2 = <volttron.platform.vip.agent.Agent object at 0x7fef9c5a6ed0>
onmessage1 = <function onmessage1 at 0x7fef9c563ed8>
onmessage2 = <function onmessage2 at 0x7fef9c563de8>
onmessage3 = <function onmessage3 at 0x7fef9c563cf8>
onmessage4 = <function onmessage4 at 0x7fef9c563a28>
onmessage5 = <function onmessage5 at 0x7fef9c563b90>
prefix_astrix_ends = '*.one.*'
prefix_astrix_middle = 'testtopic1.*.test'
prefix_both_delimiters_ends = '*.test.foo.#'
prefix_hashtag_ends = '#.one.#'
prefix_hashtag_middle = 'testtopic2.#.test'
request    = <FixtureRequest for <Function 'test_regex[volttron_instance0]'>>
stop       = <function stop at 0x7fef9c579ed8>
test_topic1 = 'test.topic.one.test1'
test_topic2 = 'testtopic1.foo.bar.three'
test_topic3 = 'test.one.topic'
test_topic4 = 'testtopic2.one.two.test'
test_topic5 = 'testtopic3.test.foo.'
volttron_instance = volttron_home: /tmp/tmp_CzVn6

test_rmq_pubsub.py:299: AssertionError
----------------------------- Captured stdout call -----------------------------
/tmp/tmp_CzVn6: Building generic agent.
/tmp/tmp_CzVn6: generating new public secret key pair
/tmp/tmp_CzVn6: Using vip-address tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: BUILD agent VOLTTRON HOME: /tmp/tmp_CzVn6
/tmp/tmp_CzVn6: platformwrapper.build_agent.address: tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: Adding publickey to auth.json
/tmp/tmp_CzVn6: platformwrapper.build_agent spawning
/tmp/tmp_CzVn6: Got hello response ['1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent1']
/tmp/tmp_CzVn6: Building generic agent.
/tmp/tmp_CzVn6: generating new public secret key pair
/tmp/tmp_CzVn6: Using vip-address tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: BUILD agent VOLTTRON HOME: /tmp/tmp_CzVn6
/tmp/tmp_CzVn6: platformwrapper.build_agent.address: tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: Adding publickey to auth.json
/tmp/tmp_CzVn6: platformwrapper.build_agent spawning
/tmp/tmp_CzVn6: Got hello response ['1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent2']
----------------------------- Captured stderr call -----------------------------
2018-10-23 13:40:44,404 volttron.platform.agent.utils DEBUG: missing file /tmp/tmp_CzVn6/agentHeWf8n.keys
2018-10-23 13:40:44,404 volttron.platform.agent.utils INFO: creating file /tmp/tmp_CzVn6/agentHeWf8n.keys
2018-10-23 13:40:44,408 root DEBUG: Creating ZMQ Core agent1
2018-10-23 13:40:44,408 volttron.platform.vip.agent.core DEBUG: address: tcp://127.0.0.165:5488
2018-10-23 13:40:44,409 volttron.platform.vip.agent.core DEBUG: identity: agent1
2018-10-23 13:40:44,409 volttron.platform.vip.agent.core DEBUG: agent_uuid: None
2018-10-23 13:40:44,409 volttron.platform.vip.agent.core DEBUG: serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
2018-10-23 13:40:44,409 volttron.platform.vip.agent.core DEBUG: AGENT RUNNING on ZMQ Core agent1
2018-10-23 13:40:44,415 volttron.platform.vip.zmq_connection DEBUG: ZMQ connection agent1
2018-10-23 13:40:44,444 volttron.platform.vip.agent.core INFO: Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: agent1
2018-10-23 13:40:44,444 volttron.platform.vip.agent.core DEBUG: Running onstart methods.
2018-10-23 13:40:44,466 volttron.platform.vip.agent.subsystems.configstore DEBUG: Processing callbacks for affected files: {}
2018-10-23 13:40:44,948 volttron.platform.vip.agent.subsystems.hello INFO: agent1 Requesting hello from peer ()
2018-10-23 13:40:44,952 volttron.platform.vip.agent.subsystems.hello INFO: Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent1'], 'user': '7c872ea0-2e4b-40fe-8bfc-dc7e2bede611', 'id': '4131159363477857804.8791693567529'})
2018-10-23 13:40:44,953 volttron.platform.agent.utils DEBUG: missing file /tmp/tmp_CzVn6/agentOy2rgz.keys
2018-10-23 13:40:44,954 volttron.platform.agent.utils INFO: creating file /tmp/tmp_CzVn6/agentOy2rgz.keys
2018-10-23 13:40:44,963 root DEBUG: Creating ZMQ Core agent2
2018-10-23 13:40:44,964 volttron.platform.vip.agent.core DEBUG: address: tcp://127.0.0.165:5488
2018-10-23 13:40:44,964 volttron.platform.vip.agent.core DEBUG: identity: agent2
2018-10-23 13:40:44,964 volttron.platform.vip.agent.core DEBUG: agent_uuid: None
2018-10-23 13:40:44,965 volttron.platform.vip.agent.core DEBUG: serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
2018-10-23 13:40:44,966 volttron.platform.vip.agent.core DEBUG: AGENT RUNNING on ZMQ Core agent2
2018-10-23 13:40:44,976 volttron.platform.vip.zmq_connection DEBUG: ZMQ connection agent2
2018-10-23 13:40:45,019 volttron.platform.vip.agent.core INFO: Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: agent2
2018-10-23 13:40:45,019 volttron.platform.vip.agent.core DEBUG: Running onstart methods.
2018-10-23 13:40:45,026 volttron.platform.vip.agent.subsystems.configstore DEBUG: Processing callbacks for affected files: {}
2018-10-23 13:40:45,528 volttron.platform.vip.agent.subsystems.hello INFO: agent2 Requesting hello from peer ()
2018-10-23 13:40:45,529 volttron.platform.vip.agent.subsystems.hello INFO: Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent2'], 'user': '288d2e60-46ba-4e2e-bb53-b66de4b2dbaa', 'id': '6158591493936188099.8791693567513'})
------------------------------ Captured log call -------------------------------
utils.py                   650 DEBUG    missing file /tmp/tmp_CzVn6/agentHeWf8n.keys
utils.py                   651 INFO     creating file /tmp/tmp_CzVn6/agentHeWf8n.keys
__init__.py                112 DEBUG    Creating ZMQ Core agent1
core.py                    459 DEBUG    address: tcp://127.0.0.165:5488
core.py                    460 DEBUG    identity: agent1
core.py                    461 DEBUG    agent_uuid: None
core.py                    462 DEBUG    serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
core.py                    551 DEBUG    AGENT RUNNING on ZMQ Core agent1
zmq_connection.py           77 DEBUG    ZMQ connection agent1
core.py                    519 INFO     Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: agent1
core.py                    520 DEBUG    Running onstart methods.
configstore.py             270 DEBUG    Processing callbacks for affected files: {}
hello.py                    86 INFO     agent1 Requesting hello from peer ()
hello.py                   104 INFO     Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent1'], 'user': '7c872ea0-2e4b-40fe-8bfc-dc7e2bede611', 'id': '4131159363477857804.8791693567529'})
utils.py                   650 DEBUG    missing file /tmp/tmp_CzVn6/agentOy2rgz.keys
utils.py                   651 INFO     creating file /tmp/tmp_CzVn6/agentOy2rgz.keys
__init__.py                112 DEBUG    Creating ZMQ Core agent2
core.py                    459 DEBUG    address: tcp://127.0.0.165:5488
core.py                    460 DEBUG    identity: agent2
core.py                    461 DEBUG    agent_uuid: None
core.py                    462 DEBUG    serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
core.py                    551 DEBUG    AGENT RUNNING on ZMQ Core agent2
zmq_connection.py           77 DEBUG    ZMQ connection agent2
core.py                    519 INFO     Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: agent2
core.py                    520 DEBUG    Running onstart methods.
configstore.py             270 DEBUG    Processing callbacks for affected files: {}
hello.py                    86 INFO     agent2 Requesting hello from peer ()
hello.py                   104 INFO     Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent2'], 'user': '288d2e60-46ba-4e2e-bb53-b66de4b2dbaa', 'id': '6158591493936188099.8791693567513'})
_____________ test_regex_incorrect_word_count[volttron_instance0] ______________

volttron_instance = volttron_home: /tmp/tmp_CzVn6
request = <FixtureRequest for <Function 'test_regex_incorrect_word_count[volttron_instance0]'>>

    @pytest.mark.rmq_pubsub
    def test_regex_incorrect_word_count(volttron_instance, request):
        global message_count1
        message_count1 = 0
    
        ### Test currently fails ###
    
        prefix1 = "testtopic.test.test1.*"
        test_topic1 = "testtopic.test.test1.foo.bar"
        test_topic3 = "testtopic"
    
        def onmessage1(peer, sender, bus, topic, headers, message):
            global message_count1
            if topic.startswith(prefix1):
                message_count1 += 1
    
        new_agent1 = volttron_instance.build_agent(identity='agent1')
        new_agent2 = volttron_instance.build_agent(identity='agent2')
    
        def stop():
            new_agent1.core.stop()
            new_agent2.core.stop()
    
        request.addfinalizer(stop)
    
        new_agent1.vip.pubsub.subscribe(peer='pubsub', prefix=prefix1, callback=onmessage1)
    
        new_agent2.vip.pubsub.publish(peer="pubsub", topic=test_topic1, headers=None, message="Test message")
>       new_agent2.vip.pubsub.publish(peer="pubsub", topic=test_topic2, headers=None, message="Test message")
E       NameError: global name 'test_topic2' is not defined

new_agent1 = <volttron.platform.vip.agent.Agent object at 0x7fef9c5a6dd0>
new_agent2 = <volttron.platform.vip.agent.Agent object at 0x7fef9c559190>
onmessage1 = <function onmessage1 at 0x7fef9c50d410>
prefix1    = 'testtopic.test.test1.*'
request    = <FixtureRequest for <Function 'test_regex_incorrect_word_count[volttron_instance0]'>>
stop       = <function stop at 0x7fef9c4f1410>
test_topic1 = 'testtopic.test.test1.foo.bar'
test_topic3 = 'testtopic'
volttron_instance = volttron_home: /tmp/tmp_CzVn6

test_rmq_pubsub.py:333: NameError
----------------------------- Captured stdout call -----------------------------
/tmp/tmp_CzVn6: Building generic agent.
/tmp/tmp_CzVn6: generating new public secret key pair
/tmp/tmp_CzVn6: Using vip-address tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: BUILD agent VOLTTRON HOME: /tmp/tmp_CzVn6
/tmp/tmp_CzVn6: platformwrapper.build_agent.address: tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: Adding publickey to auth.json
/tmp/tmp_CzVn6: platformwrapper.build_agent spawning
/tmp/tmp_CzVn6: Got hello response ['1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent1']
/tmp/tmp_CzVn6: Building generic agent.
/tmp/tmp_CzVn6: generating new public secret key pair
/tmp/tmp_CzVn6: Using vip-address tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: BUILD agent VOLTTRON HOME: /tmp/tmp_CzVn6
/tmp/tmp_CzVn6: platformwrapper.build_agent.address: tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: Adding publickey to auth.json
/tmp/tmp_CzVn6: platformwrapper.build_agent spawning
/tmp/tmp_CzVn6: Got hello response ['1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent2']
----------------------------- Captured stderr call -----------------------------
2018-10-23 13:40:45,659 volttron.platform.agent.utils DEBUG: missing file /tmp/tmp_CzVn6/agent7yWgxG.keys
2018-10-23 13:40:45,659 volttron.platform.agent.utils INFO: creating file /tmp/tmp_CzVn6/agent7yWgxG.keys
2018-10-23 13:40:45,663 root DEBUG: Creating ZMQ Core agent1
2018-10-23 13:40:45,663 volttron.platform.vip.agent.core DEBUG: address: tcp://127.0.0.165:5488
2018-10-23 13:40:45,663 volttron.platform.vip.agent.core DEBUG: identity: agent1
2018-10-23 13:40:45,663 volttron.platform.vip.agent.core DEBUG: agent_uuid: None
2018-10-23 13:40:45,663 volttron.platform.vip.agent.core DEBUG: serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
2018-10-23 13:40:45,663 volttron.platform.vip.agent.core DEBUG: AGENT RUNNING on ZMQ Core agent1
2018-10-23 13:40:45,676 volttron.platform.vip.zmq_connection DEBUG: ZMQ connection agent1
2018-10-23 13:40:45,699 volttron.platform.vip.agent.core INFO: Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: agent1
2018-10-23 13:40:45,699 volttron.platform.vip.agent.core DEBUG: Running onstart methods.
2018-10-23 13:40:45,727 volttron.platform.vip.agent.subsystems.configstore DEBUG: Processing callbacks for affected files: {}
2018-10-23 13:40:46,206 volttron.platform.vip.agent.subsystems.hello INFO: agent1 Requesting hello from peer ()
2018-10-23 13:40:46,207 volttron.platform.vip.agent.subsystems.hello INFO: Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent1'], 'user': 'b12f02a1-4777-4888-afa7-b8c0910a3ae9', 'id': '13168412655854822013.8791693529109'})
2018-10-23 13:40:46,208 volttron.platform.agent.utils DEBUG: missing file /tmp/tmp_CzVn6/agentc1VoxE.keys
2018-10-23 13:40:46,208 volttron.platform.agent.utils INFO: creating file /tmp/tmp_CzVn6/agentc1VoxE.keys
2018-10-23 13:40:46,211 root DEBUG: Creating ZMQ Core agent2
2018-10-23 13:40:46,212 volttron.platform.vip.agent.core DEBUG: address: tcp://127.0.0.165:5488
2018-10-23 13:40:46,212 volttron.platform.vip.agent.core DEBUG: identity: agent2
2018-10-23 13:40:46,212 volttron.platform.vip.agent.core DEBUG: agent_uuid: None
2018-10-23 13:40:46,212 volttron.platform.vip.agent.core DEBUG: serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
2018-10-23 13:40:46,212 volttron.platform.vip.agent.core DEBUG: AGENT RUNNING on ZMQ Core agent2
2018-10-23 13:40:46,222 volttron.platform.vip.zmq_connection DEBUG: ZMQ connection agent2
2018-10-23 13:40:46,254 volttron.platform.vip.agent.core INFO: Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: agent2
2018-10-23 13:40:46,254 volttron.platform.vip.agent.core DEBUG: Running onstart methods.
2018-10-23 13:40:46,276 volttron.platform.vip.agent.subsystems.configstore DEBUG: Processing callbacks for affected files: {}
2018-10-23 13:40:46,764 volttron.platform.vip.agent.subsystems.hello INFO: agent2 Requesting hello from peer ()
2018-10-23 13:40:46,766 volttron.platform.vip.agent.subsystems.hello INFO: Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent2'], 'user': '97843f9a-dbaf-4e2b-a9ae-7f9e00df1dda', 'id': '1648362318497684355.8791693521845'})
------------------------------ Captured log call -------------------------------
utils.py                   650 DEBUG    missing file /tmp/tmp_CzVn6/agent7yWgxG.keys
utils.py                   651 INFO     creating file /tmp/tmp_CzVn6/agent7yWgxG.keys
__init__.py                112 DEBUG    Creating ZMQ Core agent1
core.py                    459 DEBUG    address: tcp://127.0.0.165:5488
core.py                    460 DEBUG    identity: agent1
core.py                    461 DEBUG    agent_uuid: None
core.py                    462 DEBUG    serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
core.py                    551 DEBUG    AGENT RUNNING on ZMQ Core agent1
zmq_connection.py           77 DEBUG    ZMQ connection agent1
core.py                    519 INFO     Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: agent1
core.py                    520 DEBUG    Running onstart methods.
configstore.py             270 DEBUG    Processing callbacks for affected files: {}
hello.py                    86 INFO     agent1 Requesting hello from peer ()
hello.py                   104 INFO     Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent1'], 'user': 'b12f02a1-4777-4888-afa7-b8c0910a3ae9', 'id': '13168412655854822013.8791693529109'})
utils.py                   650 DEBUG    missing file /tmp/tmp_CzVn6/agentc1VoxE.keys
utils.py                   651 INFO     creating file /tmp/tmp_CzVn6/agentc1VoxE.keys
__init__.py                112 DEBUG    Creating ZMQ Core agent2
core.py                    459 DEBUG    address: tcp://127.0.0.165:5488
core.py                    460 DEBUG    identity: agent2
core.py                    461 DEBUG    agent_uuid: None
core.py                    462 DEBUG    serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
core.py                    551 DEBUG    AGENT RUNNING on ZMQ Core agent2
zmq_connection.py           77 DEBUG    ZMQ connection agent2
core.py                    519 INFO     Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: agent2
core.py                    520 DEBUG    Running onstart methods.
configstore.py             270 DEBUG    Processing callbacks for affected files: {}
hello.py                    86 INFO     agent2 Requesting hello from peer ()
hello.py                   104 INFO     Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent2'], 'user': '97843f9a-dbaf-4e2b-a9ae-7f9e00df1dda', 'id': '1648362318497684355.8791693521845'})
______________________ test_callback[volttron_instance0] _______________________

volttron_instance = volttron_home: /tmp/tmp_CzVn6
request = <FixtureRequest for <Function 'test_callback[volttron_instance0]'>>

    @pytest.mark.rmq_pubsub
    def test_callback(volttron_instance, request):
        global message_count1, message_count2
        message_count1 = 0
        message_count2 = 0
    
        ### Test failed. Cause currently unknown ###
    
        test_topic = "testtopic1/test/foo/bar"
    
        def onmessage1(peer, sender, bus, topic, headers, message):
            global message_count1
            if topic.startswith(test_topic):
                message_count1 += 1
    
        def onmessage2(peer, sender, bus, topic, headers, message):
            global message_count2
            if topic.startswith(test_topic):
                message_count2 += 1
    
        new_agent1 = volttron_instance.build_agent(identity='agent1')
        new_agent2 = volttron_instance.build_agent(identity='agent2')
    
    
        def stop():
            new_agent1.core.stop()
            new_agent2.core.stop()
    
        request.addfinalizer(stop)
    
        new_agent1.vip.pubsub.subscribe(peer='pubsub', prefix=test_topic, callback=onmessage1)
        new_agent1.vip.pubsub.subscribe(peer='pubsub', prefix=test_topic, callback=onmessage2)
        gevent.sleep(0.01)
    
    
        new_agent2.vip.pubsub.publish(peer="pubsub", topic=test_topic, headers=None, message="Test message")
        gevent.sleep(0.01)
    
    
        new_agent1.vip.pubsub.unsubscribe(peer='pubsub', prefix=test_topic, callback=onmessage1)
        gevent.sleep(0.01)
    
        new_agent2.vip.pubsub.publish(peer="pubsub", topic=test_topic, headers=None, message="Test message")
        gevent.sleep(0.01)
    
    
    
        assert message_count1 == 1
>       assert message_count2 == 2
E       assert 1 == 2

new_agent1 = <volttron.platform.vip.agent.Agent object at 0x7fef9c559210>
new_agent2 = <volttron.platform.vip.agent.Agent object at 0x7fef9c4f82d0>
onmessage1 = <function onmessage1 at 0x7fef9c50d2a8>
onmessage2 = <function onmessage2 at 0x7fef9c50d9b0>
request    = <FixtureRequest for <Function 'test_callback[volttron_instance0]'>>
stop       = <function stop at 0x7fef9c46b848>
test_topic = 'testtopic1/test/foo/bar'
volttron_instance = volttron_home: /tmp/tmp_CzVn6

test_rmq_pubsub.py:389: AssertionError
----------------------------- Captured stdout call -----------------------------
/tmp/tmp_CzVn6: Building generic agent.
/tmp/tmp_CzVn6: generating new public secret key pair
/tmp/tmp_CzVn6: Using vip-address tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: BUILD agent VOLTTRON HOME: /tmp/tmp_CzVn6
/tmp/tmp_CzVn6: platformwrapper.build_agent.address: tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: Adding publickey to auth.json
/tmp/tmp_CzVn6: platformwrapper.build_agent spawning
/tmp/tmp_CzVn6: Got hello response ['1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent1']
/tmp/tmp_CzVn6: Building generic agent.
/tmp/tmp_CzVn6: generating new public secret key pair
/tmp/tmp_CzVn6: Using vip-address tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: BUILD agent VOLTTRON HOME: /tmp/tmp_CzVn6
/tmp/tmp_CzVn6: platformwrapper.build_agent.address: tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: Adding publickey to auth.json
/tmp/tmp_CzVn6: platformwrapper.build_agent spawning
/tmp/tmp_CzVn6: Got hello response ['1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent2']
----------------------------- Captured stderr call -----------------------------
2018-10-23 13:40:46,794 volttron.platform.agent.utils DEBUG: missing file /tmp/tmp_CzVn6/agentz9kPL0.keys
2018-10-23 13:40:46,795 volttron.platform.agent.utils INFO: creating file /tmp/tmp_CzVn6/agentz9kPL0.keys
2018-10-23 13:40:46,797 root DEBUG: Creating ZMQ Core agent1
2018-10-23 13:40:46,798 volttron.platform.vip.agent.core DEBUG: address: tcp://127.0.0.165:5488
2018-10-23 13:40:46,798 volttron.platform.vip.agent.core DEBUG: identity: agent1
2018-10-23 13:40:46,798 volttron.platform.vip.agent.core DEBUG: agent_uuid: None
2018-10-23 13:40:46,798 volttron.platform.vip.agent.core DEBUG: serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
2018-10-23 13:40:46,798 volttron.platform.vip.agent.core DEBUG: AGENT RUNNING on ZMQ Core agent1
2018-10-23 13:40:46,806 volttron.platform.vip.zmq_connection DEBUG: ZMQ connection agent1
2018-10-23 13:40:46,836 volttron.platform.vip.agent.core INFO: Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: agent1
2018-10-23 13:40:46,837 volttron.platform.vip.agent.core DEBUG: Running onstart methods.
2018-10-23 13:40:46,858 volttron.platform.vip.agent.subsystems.configstore DEBUG: Processing callbacks for affected files: {}
2018-10-23 13:40:47,344 volttron.platform.vip.agent.subsystems.hello INFO: agent1 Requesting hello from peer ()
2018-10-23 13:40:47,351 volttron.platform.vip.agent.subsystems.hello INFO: Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent1'], 'user': 'ad58657e-3759-447a-8ecb-08a48de9362a', 'id': '15469861991284448790.8791693517277'})
2018-10-23 13:40:47,353 volttron.platform.agent.utils DEBUG: missing file /tmp/tmp_CzVn6/agentuOfyel.keys
2018-10-23 13:40:47,354 volttron.platform.agent.utils INFO: creating file /tmp/tmp_CzVn6/agentuOfyel.keys
2018-10-23 13:40:47,369 root DEBUG: Creating ZMQ Core agent2
2018-10-23 13:40:47,370 volttron.platform.vip.agent.core DEBUG: address: tcp://127.0.0.165:5488
2018-10-23 13:40:47,370 volttron.platform.vip.agent.core DEBUG: identity: agent2
2018-10-23 13:40:47,370 volttron.platform.vip.agent.core DEBUG: agent_uuid: None
2018-10-23 13:40:47,370 volttron.platform.vip.agent.core DEBUG: serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
2018-10-23 13:40:47,371 volttron.platform.vip.agent.core DEBUG: AGENT RUNNING on ZMQ Core agent2
2018-10-23 13:40:47,387 volttron.platform.vip.zmq_connection DEBUG: ZMQ connection agent2
2018-10-23 13:40:47,414 volttron.platform.vip.agent.core INFO: Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: agent2
2018-10-23 13:40:47,414 volttron.platform.vip.agent.core DEBUG: Running onstart methods.
2018-10-23 13:40:47,439 volttron.platform.vip.agent.subsystems.configstore DEBUG: Processing callbacks for affected files: {}
2018-10-23 13:40:47,915 volttron.platform.vip.agent.subsystems.hello INFO: agent2 Requesting hello from peer ()
2018-10-23 13:40:47,917 volttron.platform.vip.agent.subsystems.hello INFO: Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent2'], 'user': 'f9968d11-5c1a-4d77-a47d-420383401502', 'id': '15407194193388977055.8791693478865'})
2018-10-23 13:40:47,941 volttron.platform.vip.agent.subsystems.pubsub DEBUG: PUSUB unsubscribe my subscriptions: testtopic1/test/foo/bar defaultdict(<function platform_subscriptions at 0x7fef9c4f11b8>, {'internal': defaultdict(<function subscriptions at 0x7fef9c454050>, {'': defaultdict(<type 'set'>, {'testtopic1/test/foo/bar': set([<function onmessage1 at 0x7fef9c50d2a8>, <function onmessage2 at 0x7fef9c50d9b0>])})})})
2018-10-23 13:40:47,941 volttron.platform.vip.agent.subsystems.pubsub DEBUG: PUSUB unsubscribe my subscriptions: testtopic1/test/foo/bar defaultdict(<function platform_subscriptions at 0x7fef9c4f11b8>, {'internal': defaultdict(<function subscriptions at 0x7fef9c454050>, {'': defaultdict(<type 'set'>, {'testtopic1/test/foo/bar': set([<function onmessage2 at 0x7fef9c50d9b0>])})})})
------------------------------ Captured log call -------------------------------
utils.py                   650 DEBUG    missing file /tmp/tmp_CzVn6/agentz9kPL0.keys
utils.py                   651 INFO     creating file /tmp/tmp_CzVn6/agentz9kPL0.keys
__init__.py                112 DEBUG    Creating ZMQ Core agent1
core.py                    459 DEBUG    address: tcp://127.0.0.165:5488
core.py                    460 DEBUG    identity: agent1
core.py                    461 DEBUG    agent_uuid: None
core.py                    462 DEBUG    serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
core.py                    551 DEBUG    AGENT RUNNING on ZMQ Core agent1
zmq_connection.py           77 DEBUG    ZMQ connection agent1
core.py                    519 INFO     Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: agent1
core.py                    520 DEBUG    Running onstart methods.
configstore.py             270 DEBUG    Processing callbacks for affected files: {}
hello.py                    86 INFO     agent1 Requesting hello from peer ()
hello.py                   104 INFO     Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent1'], 'user': 'ad58657e-3759-447a-8ecb-08a48de9362a', 'id': '15469861991284448790.8791693517277'})
utils.py                   650 DEBUG    missing file /tmp/tmp_CzVn6/agentuOfyel.keys
utils.py                   651 INFO     creating file /tmp/tmp_CzVn6/agentuOfyel.keys
__init__.py                112 DEBUG    Creating ZMQ Core agent2
core.py                    459 DEBUG    address: tcp://127.0.0.165:5488
core.py                    460 DEBUG    identity: agent2
core.py                    461 DEBUG    agent_uuid: None
core.py                    462 DEBUG    serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
core.py                    551 DEBUG    AGENT RUNNING on ZMQ Core agent2
zmq_connection.py           77 DEBUG    ZMQ connection agent2
core.py                    519 INFO     Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: agent2
core.py                    520 DEBUG    Running onstart methods.
configstore.py             270 DEBUG    Processing callbacks for affected files: {}
hello.py                    86 INFO     agent2 Requesting hello from peer ()
hello.py                   104 INFO     Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent2'], 'user': 'f9968d11-5c1a-4d77-a47d-420383401502', 'id': '15407194193388977055.8791693478865'})
pubsub.py                  496 DEBUG    PUSUB unsubscribe my subscriptions: testtopic1/test/foo/bar defaultdict(<function platform_subscriptions at 0x7fef9c4f11b8>, {'internal': defaultdict(<function subscriptions at 0x7fef9c454050>, {'': defaultdict(<type 'set'>, {'testtopic1/test/foo/bar': set([<function onmessage1 at 0x7fef9c50d2a8>, <function onmessage2 at 0x7fef9c50d9b0>])})})})
pubsub.py                  496 DEBUG    PUSUB unsubscribe my subscriptions: testtopic1/test/foo/bar defaultdict(<function platform_subscriptions at 0x7fef9c4f11b8>, {'internal': defaultdict(<function subscriptions at 0x7fef9c454050>, {'': defaultdict(<type 'set'>, {'testtopic1/test/foo/bar': set([<function onmessage2 at 0x7fef9c50d9b0>])})})})
________________________ test_list[volttron_instance0] _________________________

volttron_instance = volttron_home: /tmp/tmp_CzVn6
request = <FixtureRequest for <Function 'test_list[volttron_instance0]'>>

    @pytest.mark.rmq_pubsub
    def test_list(volttron_instance, request):
        global message_count1
        message_count1 = 0
    
        prefix0 = "testtopic1/test/foo/bar"
        test_topic1 = "testtopic1/test/foo/bar/one"
        test_topic2 = "testtopic1/test/foo/bar/two"
        test_topic3 = "testtopic1/test/foo/bar/three"
    
        tup_topic = ""
        topic_result_index = 2
        member_result_index = 3
    
        def onmessage1(peer, sender, bus, topic, headers, message):
            global message_count1
            if topic.startswith(prefix0):
                message_count1 += 1
    
    
        new_agent1 = volttron_instance.build_agent(identity='agent1')
        new_agent2 = volttron_instance.build_agent(identity='agent2')
    
        def stop():
            new_agent1.core.stop()
            new_agent2.core.stop()
    
        new_agent1.vip.pubsub.subscribe(peer='pubsub', prefix=test_topic1, callback=onmessage1)
        new_agent1.vip.pubsub.subscribe(peer='pubsub', prefix=test_topic2, callback=onmessage1)
        new_agent1.vip.pubsub.subscribe(peer='pubsub', prefix=test_topic3, callback=onmessage1)
    
        list_results = new_agent1.vip.pubsub.list(peer='pubsub', prefix=prefix0, bus='', subscribed=True, reverse=False,
                                   all_platforms=False)
    
>       for result in list_results:
E       TypeError: 'AsyncResult' object is not iterable

list_results = <gevent.event.AsyncResult object at 0x7fef9c468610>
member_result_index = 3
new_agent1 = <volttron.platform.vip.agent.Agent object at 0x7fef9c4e1f90>
new_agent2 = <volttron.platform.vip.agent.Agent object at 0x7fef9c457690>
onmessage1 = <function onmessage1 at 0x7fef9c4f1500>
prefix0    = 'testtopic1/test/foo/bar'
request    = <FixtureRequest for <Function 'test_list[volttron_instance0]'>>
stop       = <function stop at 0x7fef9c50d2a8>
test_topic1 = 'testtopic1/test/foo/bar/one'
test_topic2 = 'testtopic1/test/foo/bar/two'
test_topic3 = 'testtopic1/test/foo/bar/three'
topic_result_index = 2
tup_topic  = ''
volttron_instance = volttron_home: /tmp/tmp_CzVn6

test_rmq_pubsub.py:426: TypeError
----------------------------- Captured stdout call -----------------------------
/tmp/tmp_CzVn6: Building generic agent.
/tmp/tmp_CzVn6: generating new public secret key pair
/tmp/tmp_CzVn6: Using vip-address tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: BUILD agent VOLTTRON HOME: /tmp/tmp_CzVn6
/tmp/tmp_CzVn6: platformwrapper.build_agent.address: tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: Adding publickey to auth.json
/tmp/tmp_CzVn6: platformwrapper.build_agent spawning
/tmp/tmp_CzVn6: Got hello response ['1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent1']
/tmp/tmp_CzVn6: Building generic agent.
/tmp/tmp_CzVn6: generating new public secret key pair
/tmp/tmp_CzVn6: Using vip-address tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: BUILD agent VOLTTRON HOME: /tmp/tmp_CzVn6
/tmp/tmp_CzVn6: platformwrapper.build_agent.address: tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: Adding publickey to auth.json
/tmp/tmp_CzVn6: platformwrapper.build_agent spawning
/tmp/tmp_CzVn6: Got hello response ['1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent2']
----------------------------- Captured stderr call -----------------------------
2018-10-23 13:40:47,991 volttron.platform.agent.utils DEBUG: missing file /tmp/tmp_CzVn6/agentKIRYjP.keys
2018-10-23 13:40:47,991 volttron.platform.agent.utils INFO: creating file /tmp/tmp_CzVn6/agentKIRYjP.keys
2018-10-23 13:40:47,995 root DEBUG: Creating ZMQ Core agent1
2018-10-23 13:40:47,995 volttron.platform.vip.agent.core DEBUG: address: tcp://127.0.0.165:5488
2018-10-23 13:40:47,995 volttron.platform.vip.agent.core DEBUG: identity: agent1
2018-10-23 13:40:47,995 volttron.platform.vip.agent.core DEBUG: agent_uuid: None
2018-10-23 13:40:47,995 volttron.platform.vip.agent.core DEBUG: serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
2018-10-23 13:40:47,996 volttron.platform.vip.agent.core DEBUG: AGENT RUNNING on ZMQ Core agent1
2018-10-23 13:40:48,011 volttron.platform.vip.zmq_connection DEBUG: ZMQ connection agent1
2018-10-23 13:40:48,046 volttron.platform.vip.agent.core INFO: Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: agent1
2018-10-23 13:40:48,047 volttron.platform.vip.agent.core DEBUG: Running onstart methods.
2018-10-23 13:40:48,063 volttron.platform.vip.agent.subsystems.configstore DEBUG: Processing callbacks for affected files: {}
2018-10-23 13:40:48,552 volttron.platform.vip.agent.subsystems.hello INFO: agent1 Requesting hello from peer ()
2018-10-23 13:40:48,554 volttron.platform.vip.agent.subsystems.hello INFO: Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent1'], 'user': '7d803874-f558-4be2-8f0d-f12a12d0c388', 'id': '7248508422367820183.8791693478881'})
2018-10-23 13:40:48,555 volttron.platform.agent.utils DEBUG: missing file /tmp/tmp_CzVn6/agentn9pKmR.keys
2018-10-23 13:40:48,555 volttron.platform.agent.utils INFO: creating file /tmp/tmp_CzVn6/agentn9pKmR.keys
2018-10-23 13:40:48,559 root DEBUG: Creating ZMQ Core agent2
2018-10-23 13:40:48,560 volttron.platform.vip.agent.core DEBUG: address: tcp://127.0.0.165:5488
2018-10-23 13:40:48,560 volttron.platform.vip.agent.core DEBUG: identity: agent2
2018-10-23 13:40:48,560 volttron.platform.vip.agent.core DEBUG: agent_uuid: None
2018-10-23 13:40:48,560 volttron.platform.vip.agent.core DEBUG: serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
2018-10-23 13:40:48,561 volttron.platform.vip.agent.core DEBUG: AGENT RUNNING on ZMQ Core agent2
2018-10-23 13:40:48,571 volttron.platform.vip.zmq_connection DEBUG: ZMQ connection agent2
2018-10-23 13:40:48,604 volttron.platform.vip.agent.core INFO: Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: agent2
2018-10-23 13:40:48,605 volttron.platform.vip.agent.core DEBUG: Running onstart methods.
2018-10-23 13:40:48,620 volttron.platform.vip.agent.subsystems.configstore DEBUG: Processing callbacks for affected files: {}
2018-10-23 13:40:49,108 volttron.platform.vip.agent.subsystems.hello INFO: agent2 Requesting hello from peer ()
2018-10-23 13:40:49,114 volttron.platform.vip.agent.subsystems.hello INFO: Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent2'], 'user': '68e89a6a-93a6-4a17-95f7-2176b190f9ec', 'id': '3982455782584335947.8791693573901'})
------------------------------ Captured log call -------------------------------
utils.py                   650 DEBUG    missing file /tmp/tmp_CzVn6/agentKIRYjP.keys
utils.py                   651 INFO     creating file /tmp/tmp_CzVn6/agentKIRYjP.keys
__init__.py                112 DEBUG    Creating ZMQ Core agent1
core.py                    459 DEBUG    address: tcp://127.0.0.165:5488
core.py                    460 DEBUG    identity: agent1
core.py                    461 DEBUG    agent_uuid: None
core.py                    462 DEBUG    serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
core.py                    551 DEBUG    AGENT RUNNING on ZMQ Core agent1
zmq_connection.py           77 DEBUG    ZMQ connection agent1
core.py                    519 INFO     Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: agent1
core.py                    520 DEBUG    Running onstart methods.
configstore.py             270 DEBUG    Processing callbacks for affected files: {}
hello.py                    86 INFO     agent1 Requesting hello from peer ()
hello.py                   104 INFO     Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent1'], 'user': '7d803874-f558-4be2-8f0d-f12a12d0c388', 'id': '7248508422367820183.8791693478881'})
utils.py                   650 DEBUG    missing file /tmp/tmp_CzVn6/agentn9pKmR.keys
utils.py                   651 INFO     creating file /tmp/tmp_CzVn6/agentn9pKmR.keys
__init__.py                112 DEBUG    Creating ZMQ Core agent2
core.py                    459 DEBUG    address: tcp://127.0.0.165:5488
core.py                    460 DEBUG    identity: agent2
core.py                    461 DEBUG    agent_uuid: None
core.py                    462 DEBUG    serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
core.py                    551 DEBUG    AGENT RUNNING on ZMQ Core agent2
zmq_connection.py           77 DEBUG    ZMQ connection agent2
core.py                    519 INFO     Connected to platform: router: 6c7a78d8-e7ca-45a2-8a25-dcd88be87e62 version: 1.0 identity: agent2
core.py                    520 DEBUG    Running onstart methods.
configstore.py             270 DEBUG    Processing callbacks for affected files: {}
hello.py                    86 INFO     agent2 Requesting hello from peer ()
hello.py                   104 INFO     Handling hello message Message(**{'peer': '', 'subsystem': 'hello', 'args': ['welcome', '1.0', '6c7a78d8-e7ca-45a2-8a25-dcd88be87e62', 'agent2'], 'user': '68e89a6a-93a6-4a17-95f7-2176b190f9ec', 'id': '3982455782584335947.8791693573901'})
____________________ test_list_reverse[volttron_instance0] _____________________

volttron_instance = volttron_home: /tmp/tmp_CzVn6
request = <FixtureRequest for <Function 'test_list_reverse[volttron_instance0]'>>

    @pytest.mark.rmq_pubsub
    def test_list_reverse(volttron_instance, request):
        global message_count1
        message_count1 = 0
    
        ### Test currently fails ###
    
        prefix0 = "testtopic1/test/foo/bar"
        test_topic1 = "testtopic1/test/foo/bar/one"
        test_topic2 = "testtopic1/test/foo/bar/two"
        test_topic3 = "testtopic1/test/foo/bar/three"
    
        tup_topic = ""
        topic_result_index = 2
        member_result_index = 3
    
        def onmessage1(peer, sender, bus, topic, headers, message):
            global message_count1
            if topic.startswith(prefix0):
                message_count1 += 1
    
>       new_agent1 = volttron_instance.build_agent(identity='agent1')

member_result_index = 3
onmessage1 = <function onmessage1 at 0x7fef9c47fe60>
prefix0    = 'testtopic1/test/foo/bar'
request    = <FixtureRequest for <Function 'test_list_reverse[volttron_instance0]'>>
test_topic1 = 'testtopic1/test/foo/bar/one'
test_topic2 = 'testtopic1/test/foo/bar/two'
test_topic3 = 'testtopic1/test/foo/bar/three'
topic_result_index = 2
tup_topic  = ''
volttron_instance = volttron_home: /tmp/tmp_CzVn6

test_rmq_pubsub.py:452: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../utils/platformwrapper.py:346: in build_agent
    hello = agent.vip.hello().get(timeout=.5)
../../env/local/lib/python2.7/site-packages/gevent/event.py:370: in get
    self._wait_core(timeout, ())
../../env/local/lib/python2.7/site-packages/gevent/event.py:95: in _wait_core
    result = self.hub.switch()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Hub at 0x7fef9d6fa230 epoll default pending=0 ref=25 fileno=10 resolver=<geve...ol at 0x7fef9d6b2190 0/1/10>> threadpool=<ThreadPool at 0x7fef9d6b2190 0/1/10>>

    def switch(self):
        switch_out = getattr(getcurrent(), 'switch_out', None)
        if switch_out is not None:
            switch_out()
>       return greenlet.switch(self)
E       Timeout: 0.5 seconds

self       = <Hub at 0x7fef9d6fa230 epoll default pending=0 ref=25 fileno=10 resolver=<geve...ol at 0x7fef9d6b2190 0/1/10>> threadpool=<ThreadPool at 0x7fef9d6b2190 0/1/10>>
switch_out = None

../../env/local/lib/python2.7/site-packages/gevent/hub.py:609: Timeout
----------------------------- Captured stdout call -----------------------------
/tmp/tmp_CzVn6: Building generic agent.
/tmp/tmp_CzVn6: generating new public secret key pair
/tmp/tmp_CzVn6: Using vip-address tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: BUILD agent VOLTTRON HOME: /tmp/tmp_CzVn6
/tmp/tmp_CzVn6: platformwrapper.build_agent.address: tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: Adding publickey to auth.json
/tmp/tmp_CzVn6: platformwrapper.build_agent spawning
----------------------------- Captured stderr call -----------------------------
2018-10-23 13:40:49,164 volttron.platform.agent.utils DEBUG: missing file /tmp/tmp_CzVn6/agentUtFCqf.keys
2018-10-23 13:40:49,164 volttron.platform.agent.utils INFO: creating file /tmp/tmp_CzVn6/agentUtFCqf.keys
2018-10-23 13:40:49,170 root DEBUG: Creating ZMQ Core agent1
2018-10-23 13:40:49,170 volttron.platform.vip.agent.core DEBUG: address: tcp://127.0.0.165:5488
2018-10-23 13:40:49,170 volttron.platform.vip.agent.core DEBUG: identity: agent1
2018-10-23 13:40:49,170 volttron.platform.vip.agent.core DEBUG: agent_uuid: None
2018-10-23 13:40:49,170 volttron.platform.vip.agent.core DEBUG: serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
2018-10-23 13:40:49,170 volttron.platform.vip.agent.core DEBUG: AGENT RUNNING on ZMQ Core agent1
2018-10-23 13:40:49,185 volttron.platform.vip.zmq_connection DEBUG: ZMQ connection agent1
2018-10-23 13:40:51,699 volttron.platform.vip.agent.subsystems.hello INFO: agent1 Requesting hello from peer ()
------------------------------ Captured log call -------------------------------
utils.py                   650 DEBUG    missing file /tmp/tmp_CzVn6/agentUtFCqf.keys
utils.py                   651 INFO     creating file /tmp/tmp_CzVn6/agentUtFCqf.keys
__init__.py                112 DEBUG    Creating ZMQ Core agent1
core.py                    459 DEBUG    address: tcp://127.0.0.165:5488
core.py                    460 DEBUG    identity: agent1
core.py                    461 DEBUG    agent_uuid: None
core.py                    462 DEBUG    serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
core.py                    551 DEBUG    AGENT RUNNING on ZMQ Core agent1
zmq_connection.py           77 DEBUG    ZMQ connection agent1
hello.py                    86 INFO     agent1 Requesting hello from peer ()
_____________________ test_persistence[volttron_instance0] _____________________

volttron_instance = volttron_home: /tmp/tmp_CzVn6
request = <FixtureRequest for <Function 'test_persistence[volttron_instance0]'>>

    @pytest.mark.rmq_pubsub
    def test_persistence(volttron_instance, request):
        global message_count1
        message_count1 = 0
    
        ### Test Fails due to lack of uuid for anonymous agent ###
    
        test_topic = "testtopic1/test/foo/bar"
    
        def onmessage1(peer, sender, bus, topic, headers, message):
            global message_count1
            if topic.startswith(test_topic):
                message_count1 += 1
    
        listener_uuid = volttron_instance.install_agent(
            agent_dir=get_examples("ListenerAgent"),
            vip_identity="listener",
            start=True)
        gevent.sleep(2)
    
>       new_agent2 = volttron_instance.build_agent(identity='agent2')

listener_uuid = 'a39c2aa9-7990-4ec7-a628-5854b51cd7e5'
onmessage1 = <function onmessage1 at 0x7fef9c3f2758>
request    = <FixtureRequest for <Function 'test_persistence[volttron_instance0]'>>
test_topic = 'testtopic1/test/foo/bar'
volttron_instance = volttron_home: /tmp/tmp_CzVn6

test_rmq_pubsub.py:494: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../utils/platformwrapper.py:346: in build_agent
    hello = agent.vip.hello().get(timeout=.5)
../../env/local/lib/python2.7/site-packages/gevent/event.py:370: in get
    self._wait_core(timeout, ())
../../env/local/lib/python2.7/site-packages/gevent/event.py:95: in _wait_core
    result = self.hub.switch()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Hub at 0x7fef9d6fa230 epoll default pending=0 ref=25 fileno=10 resolver=<geve...ol at 0x7fef9d6b2190 0/1/10>> threadpool=<ThreadPool at 0x7fef9d6b2190 0/1/10>>

    def switch(self):
        switch_out = getattr(getcurrent(), 'switch_out', None)
        if switch_out is not None:
            switch_out()
>       return greenlet.switch(self)
E       Timeout: 0.5 seconds

self       = <Hub at 0x7fef9d6fa230 epoll default pending=0 ref=25 fileno=10 resolver=<geve...ol at 0x7fef9d6b2190 0/1/10>> threadpool=<ThreadPool at 0x7fef9d6b2190 0/1/10>>
switch_out = None

../../env/local/lib/python2.7/site-packages/gevent/hub.py:609: Timeout
----------------------------- Captured stdout call -----------------------------
/tmp/tmp_CzVn6: PROCESS IS RUNNING: <Popen at 0x7fef9d6762d0 pid=11652 returncode=None>
/tmp/tmp_CzVn6: running bdist_wheel
running build
running build_py
creating build
creating build/lib.linux-x86_64-2.7
creating build/lib.linux-x86_64-2.7/listener
copying listener/agent.py -> build/lib.linux-x86_64-2.7/listener
copying listener/settings.py -> build/lib.linux-x86_64-2.7/listener
copying listener/__init__.py -> build/lib.linux-x86_64-2.7/listener
installing to build/bdist.linux-x86_64/wheel
running install
running install_lib
creating build/bdist.linux-x86_64
creating build/bdist.linux-x86_64/wheel
creating build/bdist.linux-x86_64/wheel/listener
copying build/lib.linux-x86_64-2.7/listener/agent.py -> build/bdist.linux-x86_64/wheel/listener
copying build/lib.linux-x86_64-2.7/listener/settings.py -> build/bdist.linux-x86_64/wheel/listener
copying build/lib.linux-x86_64-2.7/listener/__init__.py -> build/bdist.linux-x86_64/wheel/listener
running install_egg_info
running egg_info
creating listeneragent.egg-info
writing requirements to listeneragent.egg-info/requires.txt
writing listeneragent.egg-info/PKG-INFO
writing top-level names to listeneragent.egg-info/top_level.txt
writing dependency_links to listeneragent.egg-info/dependency_links.txt
writing entry points to listeneragent.egg-info/entry_points.txt
writing manifest file 'listeneragent.egg-info/SOURCES.txt'
reading manifest file 'listeneragent.egg-info/SOURCES.txt'
writing manifest file 'listeneragent.egg-info/SOURCES.txt'
Copying listeneragent.egg-info to build/bdist.linux-x86_64/wheel/listeneragent-3.2-py2.7.egg-info
running install_scripts
creating build/bdist.linux-x86_64/wheel/listeneragent-3.2.dist-info/WHEEL
creating '/tmp/tmp5rVIm0/pkg/dist/listeneragent-3.2-py2-none-any.whl' and adding '.' to it
adding 'listener/__init__.py'
adding 'listener/agent.py'
adding 'listener/settings.py'
adding 'listeneragent-3.2.dist-info/DESCRIPTION.rst'
adding 'listeneragent-3.2.dist-info/entry_points.txt'
adding 'listeneragent-3.2.dist-info/metadata.json'
adding 'listeneragent-3.2.dist-info/top_level.txt'
adding 'listeneragent-3.2.dist-info/WHEEL'
adding 'listeneragent-3.2.dist-info/METADATA'
adding 'listeneragent-3.2.dist-info/RECORD'
{
    "started": true, 
    "agent_pid": 11762, 
    "starting": true, 
    "agent_uuid": "a39c2aa9-7990-4ec7-a628-5854b51cd7e5"
}

/tmp/tmp_CzVn6: here are the results: {
    "started": true, 
    "agent_pid": 11762, 
    "starting": true, 
    "agent_uuid": "a39c2aa9-7990-4ec7-a628-5854b51cd7e5"
}
/tmp/tmp_CzVn6: Building generic agent.
/tmp/tmp_CzVn6: generating new public secret key pair
/tmp/tmp_CzVn6: Using vip-address tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: BUILD agent VOLTTRON HOME: /tmp/tmp_CzVn6
/tmp/tmp_CzVn6: platformwrapper.build_agent.address: tcp://127.0.0.165:5488
/tmp/tmp_CzVn6: Adding publickey to auth.json
/tmp/tmp_CzVn6: platformwrapper.build_agent spawning
----------------------------- Captured stderr call -----------------------------
INFO:install-agent.py:Installing requirements for agent.
You are using pip version 18.0, however version 18.1 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.
Invalid yaml file detect, attempting to parser using json parser.
2018-10-23 13:40:59,204 volttron.platform.vip.agent.core ERROR: No response to hello message after 10 seconds.
2018-10-23 13:40:59,205 volttron.platform.vip.agent.core ERROR: A common reason for this is a conflicting VIP IDENTITY.
2018-10-23 13:40:59,206 volttron.platform.vip.agent.core ERROR: Another common reason is not having an auth entry onthe target instance.
2018-10-23 13:40:59,206 volttron.platform.vip.agent.core ERROR: Shutting down agent.
2018-10-23 13:40:59,207 volttron.platform.vip.agent.core ERROR: Possible conflicting identity is: agent1
  AGENT             IDENTITY TAG STATUS          HEALTH
2018-10-23 13:41:05,790 volttron.platform.agent.utils DEBUG: missing file /tmp/tmp_CzVn6/agentOy5B7y.keys
2018-10-23 13:41:05,790 volttron.platform.agent.utils INFO: creating file /tmp/tmp_CzVn6/agentOy5B7y.keys
2018-10-23 13:41:05,793 root DEBUG: Creating ZMQ Core agent2
2018-10-23 13:41:05,794 volttron.platform.vip.agent.core DEBUG: address: tcp://127.0.0.165:5488
2018-10-23 13:41:05,794 volttron.platform.vip.agent.core DEBUG: identity: agent2
2018-10-23 13:41:05,794 volttron.platform.vip.agent.core DEBUG: agent_uuid: None
2018-10-23 13:41:05,794 volttron.platform.vip.agent.core DEBUG: serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
2018-10-23 13:41:05,794 volttron.platform.vip.agent.core DEBUG: AGENT RUNNING on ZMQ Core agent2
2018-10-23 13:41:05,802 volttron.platform.vip.zmq_connection DEBUG: ZMQ connection agent2
2018-10-23 13:41:08,308 volttron.platform.vip.agent.subsystems.hello INFO: agent2 Requesting hello from peer ()
------------------------------ Captured log call -------------------------------
core.py                    494 ERROR    No response to hello message after 10 seconds.
core.py                    495 ERROR    A common reason for this is a conflicting VIP IDENTITY.
core.py                    496 ERROR    Another common reason is not having an auth entry onthe target instance.
core.py                    498 ERROR    Shutting down agent.
core.py                    500 ERROR    Possible conflicting identity is: agent1
utils.py                   650 DEBUG    missing file /tmp/tmp_CzVn6/agentOy5B7y.keys
utils.py                   651 INFO     creating file /tmp/tmp_CzVn6/agentOy5B7y.keys
__init__.py                112 DEBUG    Creating ZMQ Core agent2
core.py                    459 DEBUG    address: tcp://127.0.0.165:5488
core.py                    460 DEBUG    identity: agent2
core.py                    461 DEBUG    agent_uuid: None
core.py                    462 DEBUG    serverkey: NYtZq4ILbENRwIf5fDOAKgW1ZjsoWZGrKUyA4FkxxRg
core.py                    551 DEBUG    AGENT RUNNING on ZMQ Core agent2
zmq_connection.py           77 DEBUG    ZMQ connection agent2
hello.py                    86 INFO     agent2 Requesting hello from peer ()
======== 6 failed, 4 passed, 46 deselected, 10 error in 195.02 seconds =========
